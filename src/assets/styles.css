@import url('https://fonts.googleapis.com/css2?family=Lato:ital,wght@0,300;0,400;0,700;1,300;1,400;1,700&display=swap');
@import url('./reset.css');
:root {
  --checkbox-color: #3ba395;
  --header-height: 100px;
  --low-priority-color: #008000;
  --medium-priority-color: #feb124;
  --high-priority-color: #fe1e1e;
}

/* utility class */
.hidden {
  visibility: hidden;
  position: absolute;
}

/* utility stop */

.header {
  height: var(--header-height);
  background-color: #c38d9e;
  padding: 1.2rem;
  color: white;
  border-bottom: 1px solid black;
}

body {
  font-family: 'Lato', sans-serif;
  background-color: #f7f7f7;
}

/* main content */

.main {
  display: grid;
  grid-template-columns: minmax(max-content, 250px) 3fr;
  height: calc(100% - var(--header-height));
}

.categories_container {
  background-color: #eeeeee;
  padding-block: 2rem;
  border-right: 1px solid black;
}

button.category_button {
  background: none;
  cursor: pointer;
}

.todos_container {
  background-color: aliceblue;
  padding: 1rem;
}

/* empty todo text */
.empty {
  margin-top: 1rem;
  margin-left: 1rem;
  font-size: 1.5rem;
  display: block;
}

.todo {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0.5rem;
  margin: 0.5rem;
  transition: transform 0.3s ease;
}

.todo.low {
  border-left: 3px solid var(--low-priority-color);
}
.todo.medium {
  border-left: 3px solid var(--medium-priority-color);
}
.todo.high {
  border-left: 3px solid var(--high-priority-color);
}

.todo:hover,
.todo:focus {
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  transform: scale(1.02);
}

.todo .right_section,
.todo .left_section {
  display: flex;
  align-items: center;
  gap: 1rem;
}

.todo .right_section button {
  background: none;
  padding: 0;
  border: none;
  cursor: pointer;
}

.todo .right_section .icon_button:hover,
.todo .right_section .icon_button:focus {
  transform: scale(1.2);
  transition: transform 0.1s ease;
}

.right_section button.detail_button {
  padding: 0.25rem 0.7rem;
  border: 2px solid var(--checkbox-color);
  border-radius: 4px;
  color: var(--checkbox-color);
  font-weight: 600;
  font-size: 0.9rem;
}

.right_section button.detail_button:hover,
.right_section button.detail_button:focus {
  background-color: var(--checkbox-color);
  color: white;
}

.todo .checkbox {
  background: none;
  border: none;
  border: 2px solid var(--checkbox-color);
  width: 20px;
  height: 20px;
  position: relative;
  cursor: pointer;
}

.todo .checkbox:hover,
.todo .checkbox.checked {
  background-color: var(--checkbox-color);
}

.todo .checkbox:hover::after,
.todo .checkbox.checked::after {
  position: absolute;
  content: '\2713';
  right: -2px;
  top: -8px;
  font-size: 1.4rem;
  color: white;
}

nav ul.categories {
  list-style-type: none;
  padding: 0;
  text-align: center;
  font-size: 1.2rem;
}

nav ul.categories li {
  margin-bottom: 0.5rem;
  font-weight: 300;
  font-size: 1.5rem;
}

/* left side add category button */
nav button.add_category {
  margin-top: 1rem;
  margin-inline: auto;
  display: block;
  padding: 4px 8px;
  border-radius: 4px;
  border: none;
  background-color: #c38d9e;
  color: white;
  font-weight: 600;
  cursor: pointer;
  font-size: 1.1rem;
}

/* form-control for category input */
nav .form-control {
  display: flex;
  flex-direction: column;
  width: 80%;
  margin-inline: auto;
  font-weight: 300;
  margin-top: 1rem;
}

nav .form-control .actions {
  display: flex;
  margin-top: 8px;
}

nav .form-control .actions button {
  flex: 1;
  background: none;
  border: none;
  color: white;
  font-weight: bold;
}

nav .form-control .actions .submit_category {
  background-color: hsl(172, 47%, 44%);
}

nav .form-control .actions .cancel_submit {
  background-color: hsl(0, 100%, 35%);
}

nav button.add_category:hover,
nav button.add_category:focus {
  background-color: hsl(341, 31%, 40%);
}

nav ul.categories li button {
  background: none;
  border: none;
}
nav ul.categories li button:hover,
nav ul.categories li button:focus {
  font-weight: 500;
}

/* floating action button */

.fab {
  border-radius: 50%;
  width: 4rem;
  height: 4rem;
  position: absolute;
  border: none;
  cursor: pointer;
  bottom: 1rem;
  background-color: hsl(341, 31%, 66%);
  font-size: 2.5rem;
  color: white;
  right: 2rem;
  z-index: 100;
}

.fab:hover,
.fab:focus {
  background-color: hsl(341, 31%, 40%);
}

/* Form Modal and Overlay */

.overlay {
  background-color: rgba(0, 0, 0, 0.3);
  position: absolute;
  z-index: 10;
  top: 0;
  right: 0;
  left: 0;
  bottom: 0;
  display: grid;
  place-content: center;
}

.modal,
.detail_modal {
  background-color: white;
  padding: 1.2rem;
  border-radius: 1rem;
  z-index: 100;
}

.detail_modal {
  max-width: 500px;
  min-width: 300px;
  padding: 2rem;
}

.detail_header {
  display: flex;
  justify-content: space-between;
}

.modal textarea {
  resize: none;
}

.modal form {
  display: flex;
  flex-direction: column;
  justify-content: center;
  gap: 0.25rem;
}

.modal .form-control {
  display: flex;
  flex-direction: column;
}

.modal .form-control label {
  display: block;
}

.modal .form-control input[type='text'] {
  width: 100%;
}

.modal .priorities {
  display: flex;
  gap: 1rem;
  justify-content: center;
}

.priority_control {
  position: relative;
}

.priority_control label {
  display: block;
  padding: 0.1rem 0.8rem;
  border-radius: 6px;
  cursor: pointer;
  transition: background-color 0.2s ease-in, color 0.2s ease-in;
}

.priority_control.low label {
  border: 1px solid var(--low-priority-color);
  color: var(--low-priority-color);
}
.priority_control.medium label {
  border: 1px solid var(--medium-priority-color);
  color: var(--medium-priority-color);
}
.priority_control.high label {
  border: 1px solid var(--high-priority-color);
  color: var(--high-priority-color);
}

.priority_control input:is(:checked, :hover, :focus) + label,
.priority_control label:is(:hover, :focus) {
  color: white;
}

.priority_control.low input:is(:checked, :hover, :focus) + label,
.priority_control.low label:is(:hover, :focus) {
  background-color: var(--low-priority-color);
}
.priority_control.medium input:is(:checked, :hover, :focus) + label,
.priority_control.medium label:is(:hover, :focus) {
  background-color: var(--medium-priority-color);
}
.priority_control.high input:is(:checked, :hover, :focus) + label,
.priority_control.high label:is(:hover, :focus) {
  background-color: var(--high-priority-color);
}

.priority_control input[type='radio'] {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  opacity: 0;
  z-index: -1;
}
